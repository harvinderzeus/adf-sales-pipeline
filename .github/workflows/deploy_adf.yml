name: Build and Deploy ADF from Dev to UAT
on:
  push:
    branches:
      - develop
  workflow_dispatch:  # Allows manual triggering

jobs:
  deploy-adf:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Set up Azure CLI
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        az --version
        
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Create a modified parameters file for UAT
    - name: Prepare UAT Parameters
      run: |
        # Copy the original parameter file
        cp ./SalesPipelineFactoryDev/factory/SalesPipelineFactoryDev_ARMTemplateParametersForFactory.json ./UAT_ARMTemplateParameters.json
        
        # Use jq to update the factoryName parameter for UAT
        jq '.parameters.factoryName.value = "${{ secrets.ADF_NAME_UAT }}"' ./UAT_ARMTemplateParameters.json > ./temp.json && mv ./temp.json ./UAT_ARMTemplateParameters.json
        
        echo "Modified parameters file for UAT:"
        cat ./UAT_ARMTemplateParameters.json
      
    - name: Validate ARM Template
      id: validate
      uses: azure/arm-deploy@v1
      with:
        scope: "resourcegroup"
        resourceGroupName: ${{ secrets.ADF_RESOURCE_GROUP }}
        template: "./SalesPipelineFactoryDev/factory/SalesPipelineFactoryDev_ARMTemplateForFactory.json"
        parameters: "./UAT_ARMTemplateParameters.json"
        deploymentMode: Validate
        failOnStdErr: false
    
    - name: Deploy ADF ARM Template
      uses: azure/arm-deploy@v1
      with:
        scope: "resourcegroup"
        resourceGroupName: ${{ secrets.ADF_RESOURCE_GROUP }}
        template: "./SalesPipelineFactoryDev/factory/SalesPipelineFactoryDev_ARMTemplateForFactory.json"
        parameters: "./UAT_ARMTemplateParameters.json"
        deploymentName: "ADF-UAT-Deployment-${{ github.run_id }}"
        deploymentMode: Incremental
        failOnStdErr: false
        
    - name: Check Deployment Status
      run: |
        DEPLOYMENT_NAME="ADF-UAT-Deployment-${{ github.run_id }}"
        DEPLOYMENT_STATUS=$(az deployment group show --name "$DEPLOYMENT_NAME" --resource-group ${{ secrets.ADF_RESOURCE_GROUP }} --query "properties.provisioningState" -o tsv)
        
        echo "Deployment status: $DEPLOYMENT_STATUS"
        if [ "$DEPLOYMENT_STATUS" != "Succeeded" ]; then
          echo "Deployment failed or had issues. Checking deployment operation..."
          az deployment group show --name "$DEPLOYMENT_NAME" --resource-group ${{ secrets.ADF_RESOURCE_GROUP }} --query "properties.error" -o json
          exit 1
        fi
        
    - name: Verify ADF Resources
      if: success()
      run: |
        echo "Verifying ADF resources were deployed correctly..."
        az datafactory pipeline list --factory-name ${{ secrets.ADF_NAME_UAT }} --resource-group ${{ secrets.ADF_RESOURCE_GROUP }} --query "[].name" -o tsv
        echo "Deployment to UAT completed successfully."